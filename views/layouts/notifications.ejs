<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifications</title>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css' rel='stylesheet'
    integrity='sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65' crossorigin='anonymous'>
  <script src=" https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js">
    </script>
</head>

<body>
    <div class="container">
        <h1>Notifications</h1>
        <button class="btn btn-danger mb-3" onclick="clearNonInvitationNotifications()">Clear All Non-Invitation
            Notifications</button>
        <ul class="list-group" id="notificationList">
            <% notifications.forEach(notification=> { %>
                <li class="list-group-item d-flex justify-content-between align-items-center" <% if
                    (notification.type==='announcement' && notification.announcement.expirationDate) { %>
                    data-expiration="<%= notification.announcement.expirationDate.toISOString() %>"
                        <% } %> >
                            <div>
                                <% if (notification.type==='invitation' ) { %>
                                    <p>You have been invited to join <%= notification.space.SpaceName %> as a <%=
                                                notification.role %>
                                    </p>
                                    <button class="btn btn-success"
                                        onclick="respondToInvitation('<%= notification._id %>', 'accepted')">Accept</button>
                                    <button class="btn btn-danger"
                                        onclick="respondToInvitation('<%= notification._id %>', 'rejected')">Reject</button>
                                    <% } else if (notification.type==='roleChange' ) { %>
                                        <p>Your role in <%= notification.space.SpaceName %> has been changed to <%=
                                                    notification.role %> by
                                                    <%= notification.leader.username %>
                                        </p>
                                        <% } else if (notification.type==='removal' ) { %>
                                            <p>You have been removed from <%= notification.space.SpaceName %> by <%=
                                                        notification.leader.username %>
                                            </p>
                                            <% } else if (notification.type==='memberAdded' ) { %>
                                                <p>
                                                    <%= notification.leader.username %> has joined <%=
                                                            notification.space.SpaceName %> as a
                                                            <%= notification.role %>
                                                </p>
                                                <% } else if (notification.type==='announcement' ) { %>
                                                    <p>
                                                        <%= notification.announcement.title %>
                                                    </p>
                                                    <a href="/announcement/<%= notification.announcement._id %>"
                                                        class="btn btn-primary btn-sm">ดูประกาศ</a>
                                                    <% if (notification.announcement.expirationDate) { %>
                                                        <small class="text-muted">Expiration Date:
                                                            <%= moment(notification.announcement.expirationDate).format('DD/MM/YYYY')
                                                                %>
                                                        </small>
                                                        <% } %>
                                                            <% } %>
                                                                <small class="text-muted">Date: <%=
                                                                        notification.formattedDate %> Time:
                                                                        <%= notification.formattedTime %></small>
                            </div>
                            <% if (notification.type !=='announcement' ) { %>
                                <button class="btn btn-danger btn-sm"
                                    onclick="deleteNotification('<%= notification._id %>')">
                                    <i class='bx bx-trash'></i>
                                </button>
                                <% } %>
                </li>
                <% }) %>
        </ul>
    </div>
    <script>
        async function respondToInvitation(notificationId, response) {
            try {
                const res = await fetch('/notifications/respond', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ notificationId, response })
                });
                const result = await res.json();
                if (res.ok) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                console.error('Error responding to invitation:', error);
                alert('An error occurred while responding to the invitation.');
            }
        }

        async function deleteNotification(notificationId) {
            try {
                const res = await fetch(`/notifications/${notificationId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });
                const result = await res.json();
                if (res.ok) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                console.error('Error deleting notification:', error);
                alert('An error occurred while deleting the notification.');
            }
        }

        async function clearNonInvitationNotifications() {
            try {
                const res = await fetch('/notifications/clear-non-invitation', {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });
                const result = await res.json();
                if (res.ok) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                console.error('Error clearing notifications:', error);
                alert('An error occurred while clearing the notifications.');
            }
        }
        // Function to check for expired announcements
        function checkForExpiredAnnouncements() {
            const notificationList = document.getElementById('notificationList');
            const listItems = notificationList.querySelectorAll('li[data-expiration]');

            listItems.forEach(listItem => {
                const expirationDateISO = listItem.dataset.expiration;
                const expirationDate = new Date(expirationDateISO);

                if (expirationDate < new Date()) {
                    notificationList.removeChild(listItem);
                }
            });
        }

        // Call checkForExpiredAnnouncements initially and then every minute
        checkForExpiredAnnouncements();
        setInterval(checkForExpiredAnnouncements, 60000); 
    </script>
</body>

</html>